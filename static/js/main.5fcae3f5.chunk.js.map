{"version":3,"sources":["components/Label.js","sorting_visualization/Sorting_visualization.js","App.js","index.js"],"names":["Label","className","Sorting_visualization","useState","size","setsize","randomarray","array","setarray","speed","setspeed","running","changestate","delay","c_delay","randomint","min","max","Math","floor","random","number","arr","i","push","generatearray","a","document","querySelector","value","x","querySelectorAll","length","style","backgroundColor","update_height","color","d","a1","slice","setTimeout","update","merge","start","middle","end","j","mergesortutil","quicksortutil","index","pivot","partition","heapify","n","largest","l","r","for","type","id","onChange","event","target","step","onClick","key","map","height","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5fcae3f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Label.css';\r\nfunction Label() {\r\n    return (\r\n        <div className=\"Label\">\r\n            <div className=\"Label__inner\"><h2>Sorting Visualizer</h2></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Label;\r\n","import React, { forwardRef, useState } from 'react';\r\nimport '../components/Buttons.css'\r\nimport './sorting_visualization.css';\r\nimport Label from '../components/Label'\r\n\r\nconst minspeed = 10;\r\nconst maxspeed = 100;\r\nconst max = 380;\r\nconst min = 10;\r\nfunction Sorting_visualization() {\r\n\r\n    //var size = 80;\r\n    //function setsize(number){size = number;}\r\n    const [size,setsize] = useState(80);\r\n    const [array, setarray] = useState(randomarray(size));\r\n    const [speed, setspeed] = useState(40);\r\n    const [running,changestate] = useState(false);\r\n    \r\n    \r\n    //var delay = (maxspeed - speed + minspeed);\r\n    var delay = (40000/(size*speed));\r\n    var c_delay = 0;\r\n\r\n\r\n    function randomint(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    function randomarray(number) {\r\n        const arr = [];\r\n        for (let i = 0; i < number; i++) arr.push(randomint(min, max));\r\n        return arr;\r\n    }\r\n\r\n    function display(number) {\r\n        return (<div className=\"arrays\" style={{ height: `${number}px` }} ></div>);\r\n    }\r\n\r\n\r\n    function changearray(event) {\r\n        const number = event.target.value;\r\n        setsize(number);\r\n        generatearray(number);\r\n    }\r\n\r\n    function changespeed(event){\r\n        setspeed(event.target.value);\r\n    }\r\n\r\n    function generatearray() {\r\n        if(running) return; \r\n        {const number = document.querySelector('#input__slider').value;\r\n        const a = randomarray(number);\r\n        let x = document.querySelectorAll('.arrays');\r\n        for(let i=0;i<x.length;i++)\r\n        {x[i].style.backgroundColor = \"greenyellow\";}\r\n        setarray(a);\r\n    }\r\n}\r\n\r\n    function update_height(a, i, color,d) {\r\n        const a1 = a.slice();\r\n        var x = document.querySelectorAll('.arrays');\r\n        setTimeout(() => {\r\n\r\n\r\n            setarray(a1);\r\n            x[i].style.backgroundColor = color;\r\n\r\n        }, c_delay);\r\n        c_delay += delay/d;\r\n    }\r\n\r\n    function update(a, i, color,d) {\r\n        var x = document.querySelectorAll('.arrays');\r\n        setTimeout(() => {\r\n            x[i].style.backgroundColor = color;\r\n        }, c_delay);\r\n        c_delay += delay/d;\r\n    }\r\n\r\n    function selectionsort() {\r\n        if(running) return;\r\n        changestate(true);\r\n        const a = array.slice();\r\n        for (let i = 0; i < a.length - 1; i++) {\r\n            let min = i;\r\n            for (let j = i + 1; j < a.length; j++) {\r\n                if (a[min] > a[j]) {\r\n                    min = j;\r\n                    update(a, j, \"red\",2);\r\n                    update(a, j, \"greenyellow\",2);\r\n                }\r\n                else {\r\n                    update(a, j, \"blue\",2);\r\n                    update(a, j, \"greenyellow\",2);\r\n                }\r\n            }\r\n\r\n\r\n            [a[i], a[min]] = [a[min], a[i]];\r\n            update_height(a, i, \"orange\",2);\r\n        }\r\n        update(a, a.length - 1, \"orange\",2);\r\n        setTimeout(()=>{changestate(false)},c_delay);\r\n        c_delay = delay;\r\n    }\r\n\r\n    function insertionsort() {\r\n        if(running) return;\r\n        changestate(true);\r\n        const a = array.slice();\r\n        for (let i = 0; i < a.length; i++) {\r\n            let key = a[i];\r\n            let j = i - 1;\r\n            while (j >= 0 && a[j] > key) {\r\n                a[j + 1] = a[j];\r\n                update_height(a, j + 1, \"blue\",2);\r\n                update_height(a, j + 1, \"orange\",2);\r\n                j--;\r\n            }\r\n            a[j + 1] = key;\r\n            update_height(a, j + 1, \"orange\",2);\r\n        }\r\n        setTimeout(()=>{changestate(false)},c_delay);\r\n        c_delay = delay;\r\n    }\r\n\r\n    function bubblesort() {\r\n        if(running) return;\r\n        changestate(true);\r\n        const a = array.slice();\r\n        for (let i = 0; i < a.length - 1; i++) {\r\n            for (let j = 0; j < a.length - 1 - i; j++) {\r\n                if (a[j] > a[j + 1]) {\r\n                    update(a, j, \"blue\",4);\r\n                    [a[j], a[j + 1]] = [a[j + 1], a[j]];\r\n                }\r\n                else {\r\n                    update(a, j, \"red\",4);\r\n                    update(a, j + 1, \"red\",4);\r\n                }\r\n                update_height(a, j, \"greenyellow\",4);\r\n                update(a, j + 1, \"greenyellow\",4);\r\n            }\r\n            update(a, a.length - 1 - i, \"orange\",4);\r\n        }\r\n        update(a,0,\"orange\",3)\r\n        setTimeout(()=>{changestate(false)},c_delay);\r\n        c_delay = delay;\r\n\r\n    }\r\n\r\n    function merge(arr, start, middle, end) {\r\n        let color = \"blue\";\r\n        if(start===0 && end === arr.length-1) color=\"orange\";\r\n        let a = [];\r\n        let i = start;\r\n        let j = middle+1;\r\n        while(i<=middle&&j<=end){\r\n            if(arr[i]>arr[j]){\r\n                update(arr,j,\"red\",1);\r\n                a.push(arr[j++]);\r\n            }\r\n            else{\r\n                update(arr,i,\"red\",1);\r\n                a.push(arr[i++]);\r\n            }\r\n        }\r\n        while(i<=middle){\r\n            update(arr,i,\"red\",1);\r\n            a.push(arr[i++]);\r\n        } \r\n        while(j<=end){\r\n            update(arr,j,\"red\",1);\r\n            a.push(arr[j++]);\r\n        }\r\n        for(let i=0;i<a.length;i++){\r\n            arr[start+i] = a[i];\r\n            update_height(arr,start+i,color,1); \r\n        }\r\n    }\r\n\r\n    function mergesortutil(arr, start, end) {\r\n        if (start < end) {\r\n            const middle = Math.floor((start + end - 1) / 2);\r\n            mergesortutil(arr, start, middle);\r\n            mergesortutil(arr, middle + 1, end);\r\n            merge(arr, start, middle, end);\r\n            // update_height(arr);\r\n        }\r\n    }\r\n\r\n    function mergesort() {\r\n        if(running) return;\r\n        changestate(true);\r\n        const a = array.slice();\r\n        const middle = Math.floor((a.length - 1) / 2);\r\n        mergesortutil(a, 0, middle);\r\n        mergesortutil(a, middle + 1, a.length - 1);\r\n        merge(a, 0, middle, a.length - 1);\r\n        // update_height(a);\r\n        setTimeout(()=>{changestate(false)},c_delay);\r\n        c_delay = delay;\r\n    }\r\n\r\n    function partition(a, start, end) {\r\n        let index = start - 1;\r\n        const pivot = a[end];\r\n        update(a,end,\"red\",1);\r\n        for (let i = start; i < end; i++) {\r\n            if (a[i] < pivot) {\r\n                index++;\r\n                update(a,index,\"red\",1);\r\n                update(a,i,\"red\",1);\r\n                [a[index], a[i]] = [a[i], a[index]];\r\n                update_height(a,i,\"greenyellow\",1);\r\n                update(a,index,\"greenyellow\",1);\r\n            }\r\n            else\r\n            {\r\n                update(a,i,\"red\",1);\r\n                update(a,i,\"greenyellow\",1);\r\n            }\r\n        }\r\n        update(a,index+1,\"red\",1);\r\n        [a[index + 1], a[end]] = [a[end], a[index + 1]];\r\n        update_height(a,end,\"greenyellow\",1);\r\n        update(a,index+1,\"blue\",1);\r\n        return index + 1;\r\n    }\r\n\r\n    function quicksortutil(a, start, end) {\r\n        if (start < end) {\r\n            const index = partition(a, start, end);\r\n            // update_height(a);\r\n            quicksortutil(a, start, index - 1);\r\n            quicksortutil(a, index + 1, end);\r\n        }\r\n    }\r\n    function quicksort() {\r\n        if(running) return;\r\n        changestate(true);\r\n        const a = array.slice();\r\n        //console.log(a);\r\n        quicksortutil(a, 0, a.length - 1);\r\n        let x = document.querySelectorAll('.arrays');\r\n        setTimeout(()=>{for(let i=0;i<x.length;i++)\r\n            {x[i].style.backgroundColor = \"orange\";}},c_delay)\r\n        \r\n\r\n        // update_height(a);\r\n        // console.log(a);\r\n        setTimeout(()=>{changestate(false)},c_delay);\r\n        c_delay = delay;\r\n    }\r\n\r\n    function heapify(a,n,i){\r\n        let arr = a.slice();\r\n        let largest = i;\r\n        const index = i;\r\n        let l = 2*i+1;\r\n        let r = 2*i+2;\r\n        if(l<n && arr[l]>arr[largest])\r\n        largest = l;\r\n        if(r<n && arr[r]>arr[largest])\r\n        largest = r;\r\n        if(largest!=i)\r\n        {   \r\n            update(arr,index,\"blue\",2);\r\n            update(arr,largest,\"blue\",2);\r\n            \r\n            [arr[i],arr[largest]] = [arr[largest],arr[i]];\r\n            update_height(arr,largest,\"greenyellow\",2);\r\n            update(arr,index,\"greenyellow\",2);\r\n            arr = heapify(arr,n,largest)\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function heapsort(){\r\n        if(running) return;\r\n        let a = array.slice();\r\n        const n = a.length;\r\n        changestate(true);\r\n        for(let i=n/2;i>=0;i--) a = heapify(a,n,i);\r\n        for(let i=n-1;i>0;i--) {\r\n            [a[0],a[i]] = [a[i],a[0]];\r\n            update(a,i,\"orange\",2);\r\n            a =  heapify(a,i,0);\r\n           \r\n        }\r\n        update_height(a,0,\"orange\",2);\r\n        setTimeout(()=>{changestate(false);},c_delay);\r\n        c_delay = delay;   \r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"input__style\">\r\n                <label for=\"input__slider\" >Size of Array</label>\r\n                <input type=\"range\" id=\"input__slider\" className=\"input__slider\" min=\"20\" max=\"200\" onChange={changearray} value={size} step=\"1\" />\r\n            </div>\r\n            <div className=\"input__style\">\r\n                <label for=\"input__slider\">Speed of Sorting</label>\r\n                <input type=\"range\" id=\"input__slider2\" className=\"input__slider\" min={minspeed} max={maxspeed} onChange={changespeed} value={speed} step=\"1\" />\r\n            </div>\r\n            <div className=\"Buttons\" >\r\n                <button className=\"button\" onClick={generatearray} >Generate New Array</button>\r\n                <button className=\"button\" onClick={quicksort} >Quick Sort</button>\r\n                <button className=\"button\" onClick={mergesort} >Merge Sort</button>\r\n                <button className=\"button\" onClick={insertionsort} >Insertion Sort</button>\r\n                <button className=\"button\" onClick={heapsort}>Heap Sort</button>\r\n                <button className=\"button\" onClick={selectionsort} >Selection Sort</button>\r\n                <button className=\"button\" onClick={bubblesort}>Bubble Sort</button>\r\n            </div>\r\n            <div className=\"bar__arrays\">\r\n                {array.map(display)}\r\n            </div>\r\n            <div className=\"footer\">\r\n                <Label/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sorting_visualization;\r\n","import React from 'react';\nimport Sorting_visualization from './sorting_visualization/Sorting_visualization';\nimport './sorting_visualization/sorting_visualization.css'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sorting_visualization />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}